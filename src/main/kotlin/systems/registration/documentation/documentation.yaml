openapi: "3.0.3"
info:
  title: "Registration System API"
  description: "API for user registration and email verification."
  version: "1.0.1"
servers:
  - url: "http://127.0.0.1:8080"
    description: "Local development server"

paths:
  /api/user/register:
    post:
      summary: "Register a new user"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                username:
                  type: "string"
                  example: "john.doe"
                firstName:
                  type: "string"
                  example: "John"
                middleName:
                  type: "string"
                  nullable: true
                  example: "Michael"
                lastName:
                  type: "string"
                  example: "Doe"
                roleType:
                  type: "string"
                  example: "CUSTOMER"
                email:
                  type: "string"
                  format: "email"
                  example: "john@example.com"
                birthday:
                  type: "string"
                  format: "date"
                  example: "2000-01-01"
                password:
                  type: "string"
                  format: "password"
                  example: "P@ssw0rd123"
                image:
                  type: "string"
                  format: "binary"
              required:
                - username
                - firstName
                - lastName
                - roleType
                - email
                - birthday
                - password
      responses:
        "200":
          description: "User registered successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: "Validation error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "409":
          description: "Conflict - Username already exists"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conflict"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failure"

  /api/user/email/verify:
    get:
      summary: "Verify user email"
      parameters:
        - name: "userId"
          in: "query"
          description: "ID of the user to verify"
          required: true
          schema:
            type: "integer"
      responses:
        "302":
          description: "Redirects to frontend confirmation page depending on status (success, failed, invalid, error, not_found)"
        "400":
          description: "Invalid userId parameter"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"

components:
  schemas:
    Success:
      type: "object"
      properties:
        status:
          type: "string"
          example: "success"
        message:
          type: "string"
          example: "User registered successfully."

    Failure:
      type: "object"
      properties:
        status:
          type: "string"
          example: "failure"
        message:
          type: "string"
          example: "Internal server error: Database issue."

    Conflict:
      type: "object"
      properties:
        status:
          type: "string"
          example: "conflict"
        message:
          type: "string"
          example: "Username already exists."

    ValidationError:
      type: "object"
      properties:
        status:
          type: "string"
          example: "validation_error"
        message:
          type: "string"
          example: |
            Username must be at least 3 characters and contain only letters, numbers, dots, hyphens, or underscores.
            Password must be at least 8 characters.
